import{_ as e,o as s,c as o,V as t}from"./chunks/framework.7ae304b1.js";const m=JSON.parse('{"title":"Structure","description":"","frontmatter":{},"headers":[],"relativePath":"fs/structure.md","filePath":"fs/structure.md"}'),a={name:"fs/structure.md"},n=t(`<h1 id="structure" tabindex="-1">Structure <a class="header-anchor" href="#structure" aria-label="Permalink to &quot;Structure&quot;">​</a></h1><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">~</span></span>
<span class="line"><span style="color:#A6ACCD;">  /pinokio</span></span>
<span class="line"><span style="color:#A6ACCD;">    /api    # stores the user installed files</span></span>
<span class="line"><span style="color:#A6ACCD;">    /bin    # stores binary files, such as cmake, git, python, etc.</span></span></code></pre></div><h2 id="bin" tabindex="-1">bin <a class="header-anchor" href="#bin" aria-label="Permalink to &quot;bin&quot;">​</a></h2><p>The <code>bin</code> folder stores all the binaries commonly used by AI engines. Currently includes:</p><ul><li><strong>python</strong> (and <code>pip</code>)</li><li><strong>node.js</strong></li><li><strong>git</strong> (only on windows for now, since mac and linux mostly ships with git)</li><li><strong>cmake</strong> used for building C projects</li><li>more coming soon (please request if you need something)</li></ul><h2 id="api" tabindex="-1">api <a class="header-anchor" href="#api" aria-label="Permalink to &quot;api&quot;">​</a></h2><p>The <code>api</code> folder is where the user downloaded repositories are stored. An API folder can contain either of the following:</p><ol><li><strong>downloaded from git:</strong> repositories you downloaded from git.</li><li><strong>locally created:</strong> you can manually create folders and work from there.</li></ol><p>A Pinokio API is a completely local.</p>`,9),r=[n];function i(l,c,d,p,u,h){return s(),o("div",null,r)}const g=e(a,[["render",i]]);export{m as __pageData,g as default};
