import{_ as s,o as a,c as n,V as t}from"./chunks/framework.7ae304b1.js";const F=JSON.parse('{"title":"Self driving scripts","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/autostart.md","filePath":"tutorial/autostart.md"}'),o={name:"tutorial/autostart.md"},e=t(`<h1 id="self-driving-scripts" tabindex="-1">Self driving scripts <a class="header-anchor" href="#self-driving-scripts" aria-label="Permalink to &quot;Self driving scripts&quot;">​</a></h1><p>By default you need to click &quot;Run&quot; (or invoke them programmatically) to run a script.</p><p>But often you may want certain scripts to automatically run themselves whenever Pinokio rstarts.</p><p>For example if your script involves starting a server, you would probably want the server to automatically start whenever Pinokio starts.</p><p>Otherwise you would have to manually start all the servers required to run your scripts every time you restart Pinokio.</p><p>You can configure this by placing a special purpose file named <code>pinokio.js</code> in your project home directory. Let&#39;s imagine a project folder called <code>myscript</code>:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">~/pinokio</span></span>
<span class="line"><span style="color:#A6ACCD;">  /api</span></span>
<span class="line"><span style="color:#A6ACCD;">    /myscript</span></span>
<span class="line"><span style="color:#A6ACCD;">      install.json</span></span>
<span class="line"><span style="color:#A6ACCD;">      start.json</span></span></code></pre></div><p>We want Pinokio to automatically run <code>~/pinokio/api/myscript/start.json</code> whenever it restarts.</p><h2 id="pinokio-json" tabindex="-1">pinokio.json <a class="header-anchor" href="#pinokio-json" aria-label="Permalink to &quot;pinokio.json&quot;">​</a></h2><p>All we need to do is to create a file named <code>pinokio.js</code> and return a JSON object with its <code>start</code> attribute pointing to the start script file. Here&#39;s an example <code>pinokio.js</code> file:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// pinokio.js</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">start.json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>The resulting file structure will look like this:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">~/pinokio</span></span>
<span class="line"><span style="color:#A6ACCD;">  /api</span></span>
<span class="line"><span style="color:#A6ACCD;">    /myscript</span></span>
<span class="line"><span style="color:#A6ACCD;">      pinokio.js</span></span>
<span class="line"><span style="color:#A6ACCD;">      install.json</span></span>
<span class="line"><span style="color:#A6ACCD;">      start.json</span></span></code></pre></div><p>Now when you restart Pinokio, Pinokio will automatically run the <code>start.json</code> script at the beginning.</p><h2 id="dynamic-start-script" tabindex="-1">dynamic start script <a class="header-anchor" href="#dynamic-start-script" aria-label="Permalink to &quot;dynamic start script&quot;">​</a></h2><p>Sometimes you may not want to trigger the start script until some condition is met.</p><p>For example, your <code>start.json</code> script may involve launching a web server, but this only makes sense when the web server is fully set up, or installed.</p><p>In this case, instead of setting a static value for the <code>start</code> attribute, the start attribute can be a JavaScript async function that returns the value:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// pinokio.js</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">kernel</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Run some logic here to check if all the modules have been installed</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// . . . .</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">installed</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">start.json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div>`,19),l=[e];function p(i,r,c,y,u,d){return a(),n("div",null,l)}const h=s(o,[["render",p]]);export{F as __pageData,h as default};
