import{_ as s,o as e,c as n,V as o}from"./chunks/framework.7ae304b1.js";const u=JSON.parse('{"title":"Auto-press Enter","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/enter.md","filePath":"tutorial/enter.md"}'),a={name:"tutorial/enter.md"},l=o(`<h1 id="auto-press-enter" tabindex="-1">Auto-press Enter <a class="header-anchor" href="#auto-press-enter" aria-label="Permalink to &quot;Auto-press Enter&quot;">â€‹</a></h1><p>Since <code>shell.write</code> does NOT automatically press the &quot;enter&quot; key for you, when you&#39;re trying to run commands with <code>shell.write</code> you will need to append all your messages with <code>\\n</code>, for example:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">run</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shell.write</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">params</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{os.platform() === &#39;win32&#39; ? &#39;dir&#39; : &#39;ls&#39;}}</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>There are two things to note here:</p><ol><li>First, we&#39;re using <a href="/processor/decode.html#template">template expressions</a> and the built-in <code>os</code> variable to determine the platform and sending <code>dir</code> if windows, and <code>ls</code> if otherwise.</li><li>Second, the <code>message</code> ends with an explicit <code>\\n</code> (newline character).</li></ol><p>If you don&#39;t include the <code>\\n</code> at the end, it will just print <code>dir</code> or <code>ls</code> and not run them.</p><p>Since most use cases will involve entering commands and it will get tedious to append everything with <code>\\n</code>, Pinokio also provides a method called <code>shell.enter</code>.</p><p>The <code>shell.enter</code> command basically does the same thing as <code>shell.write</code>, except it always automatically enters the enter key for you at the end.</p><p>Above example can be transformed to the following (Notice we&#39;re using <code>shell.enter</code> instead of <code>shell.write</code>, and that the trailing <code>\\n</code> in the <code>message</code> is gone now):</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">run</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shell.enter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">params</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{os.platform() === &#39;win32&#39; ? &#39;dir&#39; : &#39;ls&#39;}}</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,10),t=[l];function p(c,r,D,i,F,d){return e(),n("div",null,t)}const C=s(a,[["render",p]]);export{u as __pageData,C as default};
