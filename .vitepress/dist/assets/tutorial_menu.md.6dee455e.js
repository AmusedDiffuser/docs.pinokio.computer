import{_ as s,o as a,c as n,V as l}from"./chunks/framework.7ae304b1.js";const o="/assets/install.71a33e84.png",A=JSON.parse('{"title":"Custom menu bar","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/menu.md","filePath":"tutorial/menu.md"}'),e={name:"tutorial/menu.md"},t=l('<h1 id="custom-menu-bar" tabindex="-1">Custom menu bar <a class="header-anchor" href="#custom-menu-bar" aria-label="Permalink to &quot;Custom menu bar&quot;">​</a></h1><p>By default, the top menu bar displays an &quot;Update&quot; button, which when clicked, pulls in updates from the git repository from which the code was downloaded.</p><h2 id="pinokio-json" tabindex="-1">pinokio.json <a class="header-anchor" href="#pinokio-json" aria-label="Permalink to &quot;pinokio.json&quot;">​</a></h2><p>But you can add additional custom buttons to the menu with <code>pinokio.js</code>, for example include a link to an install script, like this:</p><p><img src="'+o+`" class="framed"></p><p>To achieve this, simply create a file named <code>pinokio.js</code> and add items to the <code>menu</code> array:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">menu</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;i class=&#39;fa-solid fa-plug&#39;&gt;&lt;/i&gt; Install</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">href</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">install.json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Each menu item can have the following attributes:</p><ul><li><code>html</code>: The html code for the item content</li><li><code>href</code> (optional) <ul><li>If specified, renders a button that links to the <code>href</code> URL.</li><li>If not specified, renders a label.</li></ul></li></ul><h2 id="dynamic-menu-construction" tabindex="-1">dynamic menu construction <a class="header-anchor" href="#dynamic-menu-construction" aria-label="Permalink to &quot;dynamic menu construction&quot;">​</a></h2><p>Sometimes you may want to dynamically generate the menu items instead of always having the same menu.</p><p>In this case, instead of setting an array for the <code>menu</code> attribute, the menu attribute can be a JavaScript async function that returns an array.</p><p>Example:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">module.exports = </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  menu</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> async (kernel) =&gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// Run some logic here to check if all the modules have been installed</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// . . . .</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    if (installed) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// 1. is it installed already? =&gt; display an &quot;installed&quot; label</span></span>
<span class="line"><span style="color:#A6ACCD;">      return [{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Installed</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> else </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// 2. is it not installed? =&gt; display an install button</span></span>
<span class="line"><span style="color:#A6ACCD;">      return [{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;i class=&#39;fa-solid fa-plug&#39;&gt;&lt;/i&gt; Install</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">install.json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div>`,14),p=[t];function c(r,i,y,D,u,d){return a(),n("div",null,p)}const F=s(e,[["render",c]]);export{A as __pageData,F as default};
