import{_ as s,o as n,c as a,V as e}from"./chunks/framework.7ae304b1.js";const u=JSON.parse('{"title":"Interacting with the shell","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/programming.md","filePath":"tutorial/programming.md"}'),o={name:"tutorial/programming.md"},l=e(`<h1 id="interacting-with-the-shell" tabindex="-1">Interacting with the shell <a class="header-anchor" href="#interacting-with-the-shell" aria-label="Permalink to &quot;Interacting with the shell&quot;">â€‹</a></h1><p>Simply being able to send off commands to the terminal is not enough if you want to fully control what happens in the terminal.</p><p>Often you will need to:</p><ol><li><strong>Read and Process:</strong> Read and process realtime data from the terminal (instead of just writing to it)</li><li><strong>Wait:</strong> Wait for certain pattern to occur before returning</li></ol><p>The event handler (The <code>on</code> attribute) lets you achieve this (available with <code>shell.write</code> and <code>shell.enter</code>).</p><p>Let&#39;s imagine we want to build an autonomous intelligence that can <strong>install and run programs</strong>.</p><p>Often, installing or setting up libraries and packages require an interactive session. Take <code>npm init</code> for example. When you run the command, it will get into an interactive mode where the user needs to enter stuff multiple times in order to complete the setup.</p><p>Here&#39;s an example of what happens when you run <code>npm init</code>:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&gt; npm init</span></span>
<span class="line"><span style="color:#A6ACCD;">This utility will walk you through creating a package.json file.</span></span>
<span class="line"><span style="color:#A6ACCD;">It only covers the most common items, and tries to guess sensible defaults.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">See \`npm help init\` for definitive documentation on these fields</span></span>
<span class="line"><span style="color:#A6ACCD;">and exactly what they do.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Use \`npm install &lt;pkg&gt;\` afterwards to install a package and</span></span>
<span class="line"><span style="color:#A6ACCD;">save it as a dependency in the package.json file.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Press ^C at any time to quit.</span></span>
<span class="line"><span style="color:#A6ACCD;">package name: (myapp)</span></span></code></pre></div><p>From this point, the user needs to either press &quot;enter&quot; to fill out the attribute with default values, or enter custom values.</p><p>If you keep pressing <code>enter</code>, the initialization process will keep filling out the required attributes with the default values and eventually end, and the control will return back to the prompt:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&gt; npm init</span></span>
<span class="line"><span style="color:#A6ACCD;">This utility will walk you through creating a package.json file.</span></span>
<span class="line"><span style="color:#A6ACCD;">It only covers the most common items, and tries to guess sensible defaults.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">See \`npm help init\` for definitive documentation on these fields</span></span>
<span class="line"><span style="color:#A6ACCD;">and exactly what they do.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Use \`npm install &lt;pkg&gt;\` afterwards to install a package and</span></span>
<span class="line"><span style="color:#A6ACCD;">save it as a dependency in the package.json file.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Press ^C at any time to quit.</span></span>
<span class="line"><span style="color:#A6ACCD;">package name: (yyy)</span></span>
<span class="line"><span style="color:#A6ACCD;">version: (1.0.0)</span></span>
<span class="line"><span style="color:#A6ACCD;">description:</span></span>
<span class="line"><span style="color:#A6ACCD;">git repository:</span></span>
<span class="line"><span style="color:#A6ACCD;">author:</span></span>
<span class="line"><span style="color:#A6ACCD;">license: (ISC)</span></span>
<span class="line"><span style="color:#A6ACCD;">About to write to /Users/x/Demos/yyy/package.json:</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;name&quot;: &quot;yyy&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;version&quot;: &quot;1.0.0&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;main&quot;: &quot;index.js&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;scripts&quot;: {</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  },</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;keywords&quot;: [],</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;author&quot;: &quot;&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;license&quot;: &quot;ISC&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;description&quot;: &quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;</span></span></code></pre></div><p>In this example, we&#39;re going to automate this entire <code>npm init</code> process using Pinokio, by automatically walking through the entire <code>npm init</code> workflow step by step, by simply submitting <code>enter</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">run</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shell.start</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shell.enter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">params</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm init</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">on</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/.+: /</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">return</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shell.enter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">params</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">on</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/.+: /</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">return</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">return</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">goto</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">params</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{input}}</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ol><li>First we start a shell session with <code>shell.start</code></li><li>Then we run <code>npm init</code> with <code>shell.enter</code><ol><li>The entered <code>message</code> is <code>&quot;&quot;</code>. The <code>shell.enter</code> will simply press enter in this case.</li><li>Note that we have an <code>on</code> event handler array. The <code>on</code> array can contain as many event handlers as you want but in this case we only have one handler.</li><li>The event handler waits for a regular expression <code>/.+: /</code> to be printed on the terminal. And when it does, it returns <code>true</code>.</li><li>In this case, the <code>/.+: /</code> event will trigger when it first reaches the <code>package name: (myapp)</code> part of the <code>npm init</code> execution since it matches the regular expression.</li></ol></li><li>Then it goes onto the next step, where it again submits an empty string <code>&quot;&quot;</code><ol><li>This time we have 2 event handlers, executed sequentially.</li><li>The first event handler is the same <code>.+: /</code> handler, which indicates that we are still in the <code>npm init</code> session. This returns 2 (which will be used in the next step)</li><li>The second event handler is <code>event: null</code>. This is a special event that gets triggered when the terminal encounters a new terminal prompt. In this case it will be <code>&gt; </code> (as shown above), and in this case returns <code>null</code></li></ol></li><li>Finally the last step is a <code>goto</code> statement, which utilizes the <code>input</code> (passed in from the previous step as the return value). <ol><li>In case of the <code>/.+: /</code> pattern, we know we&#39;re still in the <code>npm init</code> process so it goes to the index 2, which keeps submitting enter keys.</li><li>In case of the <code>null</code> event, we know we&#39;ve encountered a terminal prompt, so we need to finish the script. The <code>goto</code> method with <code>index: null</code> ends the script.</li></ol></li></ol><p>Let&#39;s step back and appreciate what we have built.</p><p><strong>We have built something that can write, read, and process anything in terminal, without human intervention.</strong></p>`,17),t=[l];function p(c,r,i,D,y,F){return n(),a("div",null,t)}const A=s(o,[["render",p]]);export{u as __pageData,A as default};
